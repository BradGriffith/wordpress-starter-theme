/**
 * Sass variables and functions.
 */

/** Variables */

/* Global */
$rem-base: 16px !default; // default html and body font-size, necessary for base-10 rem calculations

 /* Typography */
$body-font-family: sans-serif;
$body-text-color: #333;
$body-line-height: 1.8em;

$link-color: rgb(0,0,238);
$link-hover-color: $link-color;

$heading-font-family: $body-font-family;
$heading-color: $body-text-color;



/** Functions (some of these are lifted directly from Zurb's Foundation framework) */

/**
 * Strip the unit from a measurement
 */
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

/**
 * Convert a single value to rems
 */
@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

/**
 * Calculate the rem-value equivalent for a value
 */
@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}